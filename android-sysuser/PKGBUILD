pkgname=android-sysusers
pkgver=4.19 # Kernel Version
pkgrel=1
pkgdesc="According to android_filesystem_config.h generate android.sysusers"
usl="https://source.android.google"
arch=('any')
license=('Apache-2.0')
source=("android_filesystem_config.h")
sha256sums=(
    'b0ecde3c67288702ab93c6e460d3dc939205b188dff2b7ed1c304b71cd5486ec'
    # 'SKIP'
    )

out_android_sysusers(){
# S1: generate original android_sysusers
    awk -F ' ' '
        /^#define AID_/ {
            type="u"; 
            name=tolower(substr($2, 5)); 
            id=$3; 
            gecos=substr($0, index($0,"/*")+2, index($0,"*/")-index($0,"/*")-2); 
            home="/"
            shell=""
            printf "%s\t%s\t%d\t\"%s\"\t%s\t%s\n", type, name, id, gecos, home, shell
        }' ${1:-"android_filesystem_config.h"}
}
android_sysusers_correct() {
# S2: remove ID <1000, ID=10000, ID=100000, Name=*_start|*_end ;
# replace Name=media_codec|media_ex|media_drm ;
# replace ':' in GECOS
  awk -F'\t' '{
    gsub(/:/, "", $4);
    if ($2 !~ /(_start$|_end$)/ && $3 >= 1000 && $3 != 10000 && $3 != 100000 ) {
      if ($2 == "media_codec") {
        $2 = "mediacodec"
      } else if ($2 == "media_ex") {
        $2 = "mediaex"
      } else if ($2 == "media_drm") {
        $2 = "mediadrm"
      }
      print $0
    }
  }'
}

android_sysusers_generator(){
    out_android_sysusers|android_sysusers_correct > android.sysusers
}

build() {
    cd "$srcdir"
    android_sysusers_generator
}

package() {
    cd "$srcdir"
    install -Dm644 android.sysusers "$pkgdir"/usr/lib/sysusers.d/android.conf
}
